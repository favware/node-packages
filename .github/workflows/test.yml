name: Unit Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Node v${{ matrix.node_version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        node_version: [12, 14]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}
      - name: Restore CI Cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles(matrix.os == 'windows-latest' && '**\yarn.lock' || '**/yarn.lock') }}
      - name: Install Dependencies
        run: yarn --ignore-scripts --frozen-lockfile
      - name: Test
        run: yarn test --coverage
      - name: Store code coverage report
        if: "(matrix.os == 'ubuntu-latest') && (matrix.node_version == 14)"
        uses: actions/upload-artifact@v2-preview
        with:
          name: coverage
          path: coverage/

  upload_codecov:
    name: upload coverage report to codecov
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download Coverage report
        uses: actions/download-artifact@v2-preview
        with:
          name: coverage
          path: coverage/
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  upload_coveralls:
    name: upload coverage report to coveralls
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download Coverage report
        uses: actions/download-artifact@v2-preview
        with:
          name: coverage
          path: coverage/
      - name: Coveralls Upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}