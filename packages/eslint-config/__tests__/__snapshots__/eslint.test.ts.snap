// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint Config should export rules 1`] = `
Object {
  "env": Object {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "jest": true,
    "node": true,
  },
  "extends": Array [
    "plugin:jest/all",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 2019,
    "jsx": true,
    "project": "./tsconfig.eslint.json",
    "sourceType": "module",
  },
  "root": true,
  "rules": Object {
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-types": Array [
      "error",
      Object {
        "types": Object {
          "Array": null,
          "Object": Object {
            "fixWith": "object",
            "message": "Use object instead",
          },
          "String": Object {
            "fixWith": "string",
            "message": "Use string instead",
          },
          "{}": Object {
            "fixWith": "object",
            "message": "Use object instead",
          },
        },
      },
    ],
    "@typescript-eslint/camelcase": Array [
      "error",
      Object {
        "allow": Array [
          "api_key",
          "app_id",
          "show_alternative",
          "store_link",
          "grant_type",
        ],
      },
    ],
    "@typescript-eslint/consistent-type-definitions": Array [
      "error",
      "type",
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/func-call-spacing": Array [
      "error",
    ],
    "@typescript-eslint/indent": Array [
      "error",
      2,
    ],
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-extra-parens": Array [
      "error",
      "functions",
    ],
    "@typescript-eslint/no-extraneous-class": Array [
      "error",
      Object {
        "allowStaticOnly": true,
      },
    ],
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-interface": "off",
    "@typescript-eslint/promise-function-async": "off",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/restrict-plus-operands": "off",
    "@typescript-eslint/semi": Array [
      "error",
      "always",
    ],
    "@typescript-eslint/unbound-method": "error",
    "@typescript-eslint/unified-signatures": "error",
    "accessor-pairs": "error",
    "array-bracket-spacing": Array [
      "error",
      "always",
    ],
    "array-callback-return": "error",
    "arrow-parens": Array [
      "error",
      "as-needed",
    ],
    "arrow-spacing": "error",
    "block-scoped-var": "error",
    "block-spacing": "error",
    "brace-style": "error",
    "callback-return": "error",
    "capitalized-comments": "error",
    "comma-dangle": Array [
      "error",
      Object {
        "arrays": "never",
        "exports": "never",
        "functions": "ignore",
        "imports": "never",
        "objects": "always-multiline",
      },
    ],
    "comma-spacing": "error",
    "comma-style": "error",
    "computed-property-spacing": "error",
    "consistent-return": "error",
    "curly": Array [
      "error",
      "multi-line",
      "consistent",
    ],
    "default-case": "error",
    "dot-location": Array [
      "error",
      "property",
    ],
    "eol-last": Array [
      "error",
      "never",
    ],
    "eqeqeq": Array [
      "error",
      "smart",
    ],
    "func-name-matching": "error",
    "func-names": "error",
    "func-style": Array [
      "error",
      "declaration",
      Object {
        "allowArrowFunctions": true,
      },
    ],
    "generator-star-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "global-require": "error",
    "handle-callback-err": "error",
    "implicit-arrow-linebreak": "error",
    "jest/consistent-test-it": Array [
      "error",
      Object {
        "fn": "test",
      },
    ],
    "jest/expect-expect": Array [
      "error",
      Object {
        "assertFunctionNames": Array [
          "expect",
          "expectSaga",
          "testSaga",
        ],
      },
    ],
    "jest/lowercase-name": "off",
    "jest/no-export": "off",
    "jest/no-hooks": "off",
    "jest/no-if": "off",
    "jest/prefer-expect-assertions": "off",
    "jest/prefer-inline-snapshots": "off",
    "jsx-quotes": Array [
      "error",
      "prefer-single",
    ],
    "key-spacing": "error",
    "keyword-spacing": "error",
    "linebreak-style": "warn",
    "lines-between-class-members": Array [
      "error",
      "always",
      Object {
        "exceptAfterSingleLine": true,
      },
    ],
    "max-classes-per-file": Array [
      "error",
      3,
    ],
    "max-len": Array [
      "warn",
      Object {
        "code": 200,
        "tabWidth": 2,
      },
    ],
    "max-statements-per-line": Array [
      "error",
      Object {
        "max": 1,
      },
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNewExceptionPattern": "^(?:[A-Z]+)_",
      },
    ],
    "new-parens": "error",
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-buffer-constructor": "error",
    "no-caller": "error",
    "no-console": "warn",
    "no-div-regex": "error",
    "no-duplicate-imports": "error",
    "no-else-return": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-floating-decimal": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-invalid-this": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loop-func": "error",
    "no-mixed-operators": "error",
    "no-mixed-requires": "error",
    "no-multi-assign": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-multiple-empty-lines": "error",
    "no-nested-ternary": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-require": "error",
    "no-new-wrappers": "error",
    "no-octal-escape": "error",
    "no-path-concat": "error",
    "no-proto": "error",
    "no-prototype-builtins": "off",
    "no-return-assign": "error",
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-shadow": "error",
    "no-tabs": "error",
    "no-template-curly-in-string": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-underscore-dangle": Array [
      "error",
      Object {
        "enforceInMethodNames": true,
      },
    ],
    "no-unmodified-loop-condition": "error",
    "no-unneeded-ternary": "error",
    "no-unused-expressions": "error",
    "no-useless-call": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-void": "error",
    "no-warning-comments": Array [
      "warn",
      Object {
        "location": "anywhere",
        "terms": Array [
          "todo",
          "fixme",
        ],
      },
    ],
    "no-whitespace-before-property": "error",
    "nonblock-statement-body-position": "error",
    "object-curly-newline": Array [
      "error",
      Object {
        "ExportDeclaration": Object {
          "minProperties": 4,
          "multiline": true,
        },
        "ImportDeclaration": Object {
          "minProperties": 10,
          "multiline": true,
        },
        "ObjectExpression": Object {
          "minProperties": 4,
          "multiline": true,
        },
        "ObjectPattern": Object {
          "minProperties": 4,
          "multiline": true,
        },
      },
    ],
    "one-var": Array [
      "error",
      Object {
        "const": "never",
        "let": "never",
        "separateRequires": true,
        "var": "never",
      },
    ],
    "one-var-declaration-per-line": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "error",
      "after",
      Object {
        "overrides": Object {
          ":": "ignore",
          "?": "ignore",
        },
      },
    ],
    "padded-blocks": Array [
      "error",
      "never",
    ],
    "padding-line-between-statements": Array [
      "error",
      Object {
        "blankLine": "always",
        "next": "return",
        "prev": "*",
      },
    ],
    "prefer-arrow-callback": "error",
    "prefer-numeric-literals": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-template": "error",
    "quote-props": Array [
      "error",
      "as-needed",
      Object {
        "numbers": true,
      },
    ],
    "quotes": Array [
      "error",
      "single",
    ],
    "radix": Array [
      "error",
      "as-needed",
    ],
    "require-atomic-updates": "off",
    "rest-spread-spacing": "error",
    "semi-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "semi-style": Array [
      "error",
      "last",
    ],
    "sort-vars": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": Array [
      "error",
      Object {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "space-in-parens": "error",
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": "error",
    "template-curly-spacing": "error",
    "template-tag-spacing": "error",
    "wrap-iife": "error",
    "yield-star-spacing": Array [
      "error",
      "after",
    ],
    "yoda": "error",
  },
}
`;
